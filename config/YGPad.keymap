/*
 * Copyright (c) 2020 The ZMK Contributors
 * SPDX-License-Identifier: MIT
pin matrix changed
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_LAYER 0
#define LAYER1 1
#define LAYER2 2

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600 Mouse Movement
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

/ {

    behaviors
    {
        lt: layer_tap 
        {
            compatible = "zmk,behavior-hold-tap";
            quick-tap-ms = <185>;
            flavor = "balanced";
        };
    };

    behaviors
    {
        ht: hold_tap
        {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

behaviors {
        htQck: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <130>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

 behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

 behaviors {
        bhmQck: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <185>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N1>, <&kp EXCL>;
            };
       };

behaviors {
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N2>, <&kp AT>;
            };
       };

behaviors {
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N3>, <&kp HASH>;
            };
       };

behaviors {
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N4>, <&kp DLLR>;
            };
       };

behaviors {
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N5>, <&kp PRCNT>;
            };
       };

behaviors {
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N6>, <&kp CARET>;
            };
       };

behaviors {
        td6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N7>, <&kp AMPS>;
            };
       };

behaviors {
        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N8>, <&kp STAR>;
            };
       };

behaviors {
        td8: tap_dance_8 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N9>, <&kp LPAR>;
            };
       };

behaviors {
        td9: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp N0>, <&kp RPAR>;
            };
       };

behaviors {
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp MINUS>, <&kp UNDER>;
            };
       };

behaviors {
        td11: tap_dance_11 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp PLUS>, <&kp EQUAL>;
            };
       };

behaviors {
        td12: tap_dance_12 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp ESC>, <&kp TILDE>, <&kp GRAVE>;
            };
       };

behaviors {
        td13: tap_dance_13 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp DOT>, <&kp COMMA>;
            };
       };

behaviors {
        td14: tap_dance_14 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp MINUS>, <&kp FSLH>;
            };

       };

behaviors {
        td15: tap_dance_15 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp PLUS>, <&kp STAR>;
            };
       };

behaviors {
        td16: tap_dance_16 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp UNDER>, <&kp LPAR>;
            };
       };

behaviors {
        td17: tap_dance_17 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp EQUAL>, <&kp RPAR>;
            };
       };

//------------------------------------Encoder

/*
behaviors {
    encoder_kp : sensor_rotate_kp
    {
        compatible = "zmk,behavior-sensor-rotate-var";
        #sensor-binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
};
*/

//------------------------------------Encoder End

combos
{
    compatible = "zmk,combos";

    combo_tab {
    timeout-ms = <50>;
    key-positions = <1 2>;
    bindings = <&kp TAB>;
    };

    /* 
    //Disable Combos
    combo_tilde {
    timeout-ms = <50>;
    key-positions = <0 1>;
    bindings = <&kp TILDE>;
    };

    combo_1 {
    timeout-ms = <50>;
    key-positions = <1 13>;
    bindings = <&kp N1>;
    };

    combo_2 {
    timeout-ms = <50>;
    key-positions = <2 14>;
    bindings = <&kp N2>;
    };

    combo_3 {
    timeout-ms = <50>;
    key-positions = <3 15>;
    bindings = <&kp N3>;
    };

        combo_4 {
            timeout-ms = <50>;
            key-positions = <4 16>;
            bindings = <&kp N4>;
            };

        combo_5 {
            timeout-ms = <50>;
            key-positions = <5 17>;
            bindings = <&kp N5>;
            };

        combo_6 {
            timeout-ms = <50>;
            key-positions = <6 18>;
            bindings = <&kp N6>;
            };

        combo_7 {
            timeout-ms = <50>;
            key-positions = <7 19>;
            bindings = <&kp N7>;
            };

        combo_8 {
            timeout-ms = <50>;
            key-positions = <8 20>;
            bindings = <&kp N8>;
            };

        combo_9 {
            timeout-ms = <50>;
            key-positions = <9 21>;
            bindings = <&kp N9>;
            };

        combo_10 {
            timeout-ms = <50>;
            key-positions = <10 22>;
            bindings = <&kp N0>;
            };

         combo_11 {
            timeout-ms = <50>;
            key-positions = <11 23>;
            bindings = <&kp MINUS>;
            };

        combo_12 {
            timeout-ms = <50>;
            key-positions = <53 55>;
            bindings = <&kp EQUAL>;
            };

        combo_exc {
            timeout-ms = <50>;
            key-positions = <13 25>;
            bindings = <&kp EXCL>;
            };

        combo_at {
            timeout-ms = <50>;
            key-positions = <14 26>;
            bindings = <&kp AT>;
            };

       combo_hash {
            timeout-ms = <50>;
            key-positions = <15 27>;
            bindings = <&kp HASH>;
            };

        combo_dllr {
            timeout-ms = <50>;
            key-positions = <16 28>;
            bindings = <&kp DLLR>;
            };

        combo_prcnt {
            timeout-ms = <50>;
            key-positions = <17 29>;
            bindings = <&kp PRCNT>;
            };

        combo_caret {
            timeout-ms = <50>;
            key-positions = <18 30>;
            bindings = <&kp CARET>;
            };

        combo_amps {
            timeout-ms = <50>;
            key-positions = <19 31>;
            bindings = <&kp AMPS>;
            };

        combo_star {
            timeout-ms = <50>;
            key-positions = <20 32>;
            bindings = <&kp STAR>;
            };

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <21 33>;
            bindings = <&kp LPAR>;
            };

        combo_rpar {
            timeout-ms = <50>;
            key-positions = <22 34>;
            bindings = <&kp RPAR>;
            };

        combo_minus {
            timeout-ms = <50>;
            key-positions = <23 35>;
            bindings = <&kp UNDER>;
            };

        combo_equal {
            timeout-ms = <50>;
            key-positions = <52 53>;
            bindings = <&kp PLUS>;
            };

        combo_equal2 {
            timeout-ms = <50>;
            key-positions = <42 43>;
            bindings = <&kp EQUAL>;
            };

        combo_TaskManager {
        timeout-ms = <50>;
        key-positions = <36 38 54>;
        bindings = <&mcrTaskManager>;
        };
    */

}; //end combo

macros
{
    mcr00: mcr00
    {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_tap &kp KP_N0 &kp KP_N0>;
    };

    mcr1: mcr1
    {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_tap &kp H &kp E &kp L &kp L &kp O &kp N2 &kp K &kp U &kp N>;
    };

      mcr2: mcr2 
      {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp B &kp A &kp B &kp O &kp N0 &kp N9 &kp N7 &kp N9>
                     , <&macro_press &kp LSHFT>
                     , <&macro_tap &kp N1 &kp N2>
                     , <&macro_release &kp LSHFT>;
      };

      mcr3: mcr3
      {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp R &kp M &kp S &kp N0 &kp N9 &kp N7 &kp N9>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp N1 &kp N2 &kp N3>
                , <&macro_release &kp LSHFT>;
      };

      mcr4: mcr4
      {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = //<&macro_press &kp LSHFT>,
                //<&macro_tap &kp N2>,
                //<&macro_release &kp LSHFT>,

                <&macro_tap &kp LBKT>,

                <&macro_press &kp LSHFT>,
                <&macro_tap &kp T &kp A &kp SEMI>,
                <&macro_release &kp LSHFT>,

                <&macro_tap &kp RALT &kp Q &kp K &kp R &kp D &kp L &kp R &kp M &kp S &kp RBKT &kp SPACE>,

                <&macro_press &kp LSHFT>,
                <&macro_tap &kp N4>,
                <&macro_release &kp LSHFT>;
      };

        mcr5: mcr5
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };

        mcr6: mcr6
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp AT &kp N &kp A &kp V &kp E &kp R &kp DOT &kp C &kp O &kp M>;
        };

        mcr7: mcr7
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp AT &kp N &kp M &kp MINUS &kp N &kp E &kp X &kp U &kp S &kp DOT &kp C &kp O &kp M>;
        };

        mcr8: mcr8
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp N0 &kp N8 &kp N1 &kp N6 &kp N8 &kp N1>;
        };

        setBT0: setBT0
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 0>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(0,100,100)>;
        };

        setBT1: setBT1
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 1>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(120,100,100)>;
        };

        setBT2: setBT2
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 2>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(240,100,100)>;
        };

        setBT3: setBT3
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 3>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(60,100,100)>;
        };

        setBT4: setBT4
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 4>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(180,100,100)>;
        };

        mcrTaskManager: mcrTaskManager
        {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LALT &kp DEL>
                , <&macro_release &kp LCTRL &kp LALT &kp DEL>;
        };

}; // end macro


keymap 
{
    compatible = "zmk,keymap";

    default_layer 
    {
        bindings = <
/*
//C0              C1               C2              C3          C4        C5         C6    
&kp ESC           &kp KP_NUM       &kp DEL         &kp BSPC    
&kp FSLH          &kp N7           &kp N8          &kp N9      
&kp STAR          &kp N4           &kp N5          &kp N6     
&kp PLUS          &kp N4           &kp N5          &kp N6      &kp C_PP       
&kp MINUS         &kp N0           &mcr00          &kp DOT     &lt LAYER1 KP_ENTER   &lt LAYER2 SPACE
*/

&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
        >;
        sensor-bindings = <&inc_dec_cp C_VOL_UP C_VOL_DN>;
    };



    layer1 
    {
        bindings = <
/*
//C0       C1           C2         C3          C4        C5       C6
&trans     &trans       &trans     &trans      
&trans     &kp HOME     &kp UP     &kp END     
&trans     &kp LEFT     &kp DOWN   &kp RIGHT  
&trans     &trans       &trans     &trans      &trans    
&trans     &trans       &trans     &trans      &trans    &trans
*/

&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
        >;
        sensor-bindings = <&inc_dec_cp PG_UP PG_DN>;
    };

    layer2 
    {
        bindings = <
/*
//C0        C1                C2         C3           C4        C5        C6      
&bt BT_CLR  &out OUT_TOG      &trans    &trans       
&trans      &trans            &trans    &trans      
&trans      &kp C_BRI_DN      &trans    &kp C_BRI_UP 
&trans      &setBT0           &setBT1   &setBT2       &trans   
&trans      &setBT3           &setBT4   &trans        &trans    &trans   
*/

&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans
        >;
        sensor-bindings = <&inc_dec_cp PG_UP PG_DN>;
        }; //Layer2 end

    }; //Keymap End
}; //All End
